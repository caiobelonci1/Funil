// Script de teste para verificar a integra√ß√£o com a API do Facebook
// Execute com: node test-facebook-api.js

require('dotenv').config();

async function testFacebookAPI() {
  console.log('üß™ Testando integra√ß√£o com API do Facebook...\n');

  // Verificar vari√°veis de ambiente
  const pageAccessToken = process.env.FACEBOOK_PAGE_ACCESS_TOKEN;
  const verifyToken = process.env.FACEBOOK_VERIFY_TOKEN;

  console.log('üìã Verificando vari√°veis de ambiente:');
  console.log(`‚úÖ FACEBOOK_PAGE_ACCESS_TOKEN: ${pageAccessToken ? 'Configurado' : '‚ùå N√£o encontrado'}`);
  console.log(`‚úÖ FACEBOOK_VERIFY_TOKEN: ${verifyToken ? 'Configurado' : '‚ùå N√£o encontrado'}`);

  if (!pageAccessToken) {
    console.log('\n‚ùå FACEBOOK_PAGE_ACCESS_TOKEN n√£o est√° configurado!');
    console.log('üí° Configure essa vari√°vel no arquivo .env do servidor');
    return;
  }

  // Teste com ID de usu√°rio fict√≠cio (ser√° substitu√≠do por ID real quando houver)
  const testUserId = '1234567890'; // ID fict√≠cio para teste
  
  console.log(`\nüîç Testando busca de perfil para usu√°rio fict√≠cio: ${testUserId}`);
  
  try {
    const fbApiUrl = `https://graph.facebook.com/${testUserId}?fields=first_name,last_name&access_token=${pageAccessToken}`;
    console.log(`üìç URL da API: ${fbApiUrl.replace(pageAccessToken, 'TOKEN_OCULTO')}`);
    
    const response = await fetch(fbApiUrl);
    const responseText = await response.text();
    
    console.log(`üìä Status da resposta: ${response.status} ${response.statusText}`);
    console.log(`üìÑ Resposta: ${responseText}`);
    
    if (response.ok) {
      const userData = JSON.parse(responseText);
      console.log('‚úÖ API do Facebook respondeu com sucesso!');
      console.log('üë§ Dados do usu√°rio:', userData);
    } else {
      console.log('‚ö†Ô∏è API do Facebook retornou erro (esperado para ID fict√≠cio)');
    }
    
  } catch (error) {
    console.error('‚ùå Erro ao testar API do Facebook:', error.message);
  }

  console.log('\nüéØ RESUMO DO TESTE:');
  console.log('- Configure um ID de usu√°rio real para teste completo');
  console.log('- Webhook est√° pronto para buscar nomes automaticamente');
  console.log('- Verifique se o PAGE_ACCESS_TOKEN tem permiss√µes adequadas');
}

// Fun√ß√£o para testar com ID real (caso seja fornecido)
async function testWithRealUserId(userId) {
  console.log(`\nüîç Testando com ID real: ${userId}`);
  
  try {
    const pageAccessToken = process.env.FACEBOOK_PAGE_ACCESS_TOKEN;
    const fbApiUrl = `https://graph.facebook.com/${userId}?fields=first_name,last_name&access_token=${pageAccessToken}`;
    
    const response = await fetch(fbApiUrl);
    const userData = await response.json();
    
    if (response.ok) {
      console.log('‚úÖ Sucesso! Dados obtidos:');
      console.log(`üë§ Nome: ${userData.first_name} ${userData.last_name}`);
      return userData;
    } else {
      console.log('‚ùå Erro:', userData);
      return null;
    }
  } catch (error) {
    console.error('‚ùå Erro:', error.message);
    return null;
  }
}

// Executar teste
if (require.main === module) {
  testFacebookAPI();
}

module.exports = { testFacebookAPI, testWithRealUserId };
